name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  # Job de qualidade de código e verificação de tipos
  lint-and-typecheck:
    name: Lint & Type Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run TypeScript compiler
        run: npx tsc --noEmit

      - name: Run Prettier check
        run: npm run format:check

  # Job de testes (quando implementados)
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint-and-typecheck

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test -- --ci --coverage

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info

  # Job de build para verificar se o projeto compila corretamente
  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: lint-and-typecheck

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma client
        run: npx prisma generate

      - name: Build project
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: .next

  # Security scanning (opcional mas recomendado)
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Scan for vulnerabilities
        uses: actions/dependency-review-action@v4

      - name: Run npm audit
        run: npm audit --audit-level=moderate
# Workflow para deploy em staging (separado - adicionar posteriormente)
# deploy-staging:
#   name: Deploy to Staging
#   runs-on: ubuntu-latest
#   needs: [lint-and-typecheck, test, build]
#   if: github.ref == 'refs/heads/main'
#
#   steps:
#   - name: Deploy to Vercel
#     uses: amondnet/vercel-action@v25
#     with:
#       vercel-token: ${{ secrets.VERCEL_TOKEN }}
#       vercel-org-id: ${{ secrets.ORG_ID}}
#       vercel-project-id: ${{ secrets.PROJECT_ID}}
#       vercel-args: '--prod'
